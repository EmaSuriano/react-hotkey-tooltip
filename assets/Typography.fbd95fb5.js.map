{"version":3,"file":"Typography.fbd95fb5.js","sources":["../../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["styles","__name","theme","root","margin","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","noWrap","textOverflow","whiteSpace","gutterBottom","marginBottom","paragraph","colorInherit","color","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","display","displayBlock","defaultVariantMapping","Typography","React","props","ref","_props$align","align","classes","className","_props$color","component","_props$display","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_jsx","clsx","concat","capitalize","withStyles","name"],"mappings":"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"}